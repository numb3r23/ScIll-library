SET(PROJECTNAME SciIllLib)
PROJECT(${PROJECTNAME})

MESSAGE(STATUS "Processing ${PROJECTNAME}")

INCLUDE_DIRECTORIES(${CMAKE_CURRENT_SOURCE_DIR} ${CMAKE_CURRENT_BINARY_DIR})

FILE(GLOB_RECURSE RENDERLIB_SRCS "*.cpp")
FILE(GLOB_RECURSE RENDERLIB_HDRS "*.hpp")

#Shader Sources
FILE(GLOB SHADER_GLSL "${RESSOURCES_DIRECTORY}/glsl/*.*")
FILE(GLOB SHADER_FILTER_GLSL "${RESSOURCES_DIRECTORY}/glsl/filter/*.*")
FILE(GLOB SHADER_RECO_GLSL "${RESSOURCES_DIRECTORY}/glsl/reco/*.*")
FILE(GLOB SHADER_GBUFFER_GLSL "${RESSOURCES_DIRECTORY}/glsl/gbuffer/*.*")

SOURCE_GROUP("GLSL" FILES ${SHADER_GLSL})
SOURCE_GROUP("GLSL\\Filter" FILES ${SHADER_FILTER_GLSL})
SOURCE_GROUP("GLSL\\gbuffer" FILES ${SHADER_GBUFFER_GLSL})

#OpenGL
INCLUDE(FindOpenGL)
IF(OPENGL_FOUND)
  MESSAGE(STATUS "- Looking for OpenGL - found")
  SET(LIBRARIES ${LIBRARIES} ${OPENGL_LIBRARIES} ${OPENGL_GLU_LIBRARY})
  INCLUDE_DIRECTORIES(${OPENGL_INCLUDE_DIR} )
ELSE(OPENGL_FOUND)
  MESSAGE(WARNING "! Looking for OpenGL - not found")
ENDIF(OPENGL_FOUND)

#GLEW fuer Win32
IF(WIN32)
  FIND_PACKAGE(GLEW REQUIRED)
  IF(GLEW_FOUND)
    MESSAGE(STATUS "- Looking for GLEW - found")
    SET(LIBRARIES ${LIBRARIES} ${GLEW_LIBRARY})
    INCLUDE_DIRECTORIES(${GLEW_INCLUDE_PATH} )
  ELSE(GLEW_FOUND)
    MESSAGE(WARNING "! Looking for GlEW - not found")
  ENDIF(GLEW_FOUND)
ENDIF(WIN32)

IF(APPLE)
  SET(LIBRARIES ${LIBRARIES} "-framework Foundation"  "-framework Cocoa")
ENDIF(APPLE)


#${Project}
ADD_LIBRARY(
    ${PROJECTNAME} 
    ${RENDERLIB_SRCS} ${RENDERLIB_HDRS} 
    ${SHADER_GLSL}
    ${SHADER_FILTER_GLSL}
    ${SHADER_RECO_GLSL}
    ${SHADER_GBUFFER_GLSL}
  )

TARGET_LINK_LIBRARIES(${PROJECTNAME} ${LIBRARIES})

IF(APPLE)
  SET_TARGET_PROPERTIES(${PROJECTNAME} PROPERTIES XCODE_ATTRIBUTE_GCC_PRECOMPILE_PREFIX_HEADER YES)
  SET_TARGET_PROPERTIES(${PROJECTNAME} PROPERTIES XCODE_ATTRIBUTE_GCC_PREFIX_HEADER "${CMAKE_CURRENT_SOURCE_DIR}/stdafx.h") 
ENDIF(APPLE)

